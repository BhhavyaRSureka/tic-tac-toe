// ********RoostGPT********
// Test generated by RoostGPT for test ReactTest using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
// Test suite for reportWebVitals.js located at src/reportWebVitals.js
// The test file will be located at __tests__/src/reportWebVitals.test.js

import reportWebVitals from '../../src/reportWebVitals'; // Using relative paths

describe('reportWebVitals', () => {
  // Mocking the web-vitals module
  jest.mock('web-vitals', () => ({
    getCLS: jest.fn(),
    getFID: jest.fn(),
    getFCP: jest.fn(),
    getLCP: jest.fn(),
    getTTFB: jest.fn()
  }));
  const { getCLS, getFID, getFCP, getLCP, getTTFB } = require('web-vitals');

  beforeEach(() => {
    // Clear all mock function calls before each test
    getCLS.mockClear();
    getFID.mockClear();
    getFCP.mockClear();
    getLCP.mockClear();
    getTTFB.mockClear();
  });

  test('does not call any web vitals if the argument is not a function', () => {
    reportWebVitals(null);
    expect(getCLS).not.toHaveBeenCalled();
    expect(getFID).not.toHaveBeenCalled();
    expect(getFCP).not.toHaveBeenCalled();
    expect(getLCP).not.toHaveBeenCalled();
    expect(getTTFB).not.toHaveBeenCalled();
  });

  test('calls web vitals when a function is provided', async () => {
    const onPerfEntry = jest.fn();
    await reportWebVitals(onPerfEntry);
    expect(getCLS).toHaveBeenCalledWith(onPerfEntry);
    expect(getFID).toHaveBeenCalledWith(onPerfEntry);
    expect(getFCP).toHaveBeenCalledWith(onPerfEntry);
    expect(getLCP).toHaveBeenCalledWith(onPerfEntry);
    expect(getTTFB).toHaveBeenCalledWith(onPerfEntry);
  });
});

