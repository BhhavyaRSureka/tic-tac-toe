// ********RoostGPT********
// Test generated by RoostGPT for test ReactTesting123 using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
// src/__tests__/src/components/board/Board.test.js

import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import Board from '../../../components/board/Board';
import '@testing-library/jest-dom';

// Create a test suite using 'describe'
describe('<Board />', () => {
  let props;

  // Set up common props before each test runs
  beforeEach(() => {
    props = {
      squares: Array(9).fill(''),
      onClick: jest.fn(),
      jumpTo: jest.fn()
    };
  });

  test('renders the correct number of Square components', () => {
    const { getAllByTestId } = render(<Board {...props} />);
    const squares = getAllByTestId('square'); // Assume the Square component has a data-test-id='square'
    expect(squares.length).toBe(9);
  });

  test('Square components receive the correct value props', () => {
    props.squares = ['X', 'O', '', '', 'X', '', '', 'O', ''];
    const { getAllByTestId } = render(<Board {...props} />);
    const squares = getAllByTestId('square');
    expect(squares[0]).toHaveTextContent('X');
    expect(squares[1]).toHaveTextContent('O');
    // ...
  });

  test('onClick prop is called with the correct argument when a Square component is clicked', () => {
    const { getAllByTestId } = render(<Board {...props} />);
    const squares = getAllByTestId('square');
    fireEvent.click(squares[0]);
    expect(props.onClick).toHaveBeenCalledWith(0);
  });

  test('jumpTo function is called with the correct argument when the restart button is clicked', () => {
    const { getByText } = render(<Board {...props} />);
    fireEvent.click(getByText('Restart the game'));
    expect(props.jumpTo).toHaveBeenCalledWith(0);
  });
});

