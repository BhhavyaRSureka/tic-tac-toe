// ********RoostGPT********
// Test generated by RoostGPT for test ReactTesting123 using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import reportWebVitals from '../../reportWebVitals';

// Mocking web-vitals module
jest.mock('web-vitals', () => ({
  getCLS: jest.fn(),
  getFID: jest.fn(),
  getFCP: jest.fn(),
  getLCP: jest.fn(),
  getTTFB: jest.fn(),
}));

describe('reportWebVitals', () => {
  const { getCLS, getFID, getFCP, getLCP, getTTFB } = require('web-vitals');

  beforeEach(() => {
    // Clear all mocks before each test
    jest.clearAllMocks();
  });

  test('should not call any web vital functions if onPerfEntry is not provided', () => {
    reportWebVitals();
    expect(getCLS).not.toHaveBeenCalled();
    expect(getFID).not.toHaveBeenCalled();
    expect(getFCP).not.toHaveBeenCalled();
    expect(getLCP).not.toHaveBeenCalled();
    expect(getTTFB).not.toHaveBeenCalled();
  });

  test('should call all web vital functions if onPerfEntry is a function', () => {
    const mockOnPerfEntry = jest.fn();
    reportWebVitals(mockOnPerfEntry);
    setImmediate(() => {
      expect(getCLS).toHaveBeenCalledWith(mockOnPerfEntry);
      expect(getFID).toHaveBeenCalledWith(mockOnPerfEntry);
      expect(getFCP).toHaveBeenCalledWith(mockOnPerfEntry);
      expect(getLCP).toHaveBeenCalledWith(mockOnPerfEntry);
      expect(getTTFB).toHaveBeenCalledWith(mockOnPerfEntry);
    });
  });

  // More tests can be added here to cover edge cases and error handling
});

